<?php
/**
 * @file
 * Dennis Layout module code.
 */

/**
 * Implements hook_ctools_plugin_api().
 */
function dennis_layout_ctools_plugin_api($module, $api) {
  if ($module == 'context' && $api == 'plugins') {
    return array('version' => 3);
  }
}

/**
 * Implements hook_flag_default_flags().
 */
function dennis_layout_flag_default_flags() {
  $flags = array();
  $flags['disable_sidebar'] = array(
    'entity_type' => 'node',
    'title' => 'Disable Sidebar',
    'global' => TRUE,
    'types' => variable_get('dennis_layout_flag_disable_content_types', array(
      'article',
      'review',
    )),
    'flag_short' => 'Disable Sidebar',
    'flag_long' => 'Disable the sidebar on this node',
    'flag_message' => 'Sidebar has been disabled on this node',
    'unflag_short' => 'Enable Sidebar',
    'unflag_long' => 'Enable the sidebar on this node',
    'unflag_message' => 'Sidebar has been enabled on this node',
    'unflag_denied_text' => '',
    'link_type' => 'toggle',
    'weight' => 0,
    'show_in_links' => array(
      'full' => TRUE,
      'token' => FALSE,
    ),
    'show_as_field' => FALSE,
    'show_on_form' => TRUE,
    'access_author' => '',
    'show_contextual_link' => FALSE,
    'show_on_profile' => FALSE,
    'access_uid' => '',
    'api_version' => 3,
  );
  return $flags;
}

/**
 * @param $context_tag
 * @param $content_types
 *
 * Create sidebar disable context.
 */
function dennis_layout_create_sidebar_off_context($content_types, $disable_regions) {
  if (context_load('disable_sidebar')) {
    drupal_set_message(t('disable_sidebar context already exists, aborting.'));
  }
  else {
    $context_region_list = array();

    // Go through all themes and find what regions to include in the context.
    foreach (list_themes(TRUE) as $theme_name => $theme_settings) {
      foreach (system_region_list($theme_name) as $region_name => $region_settings) {
        if (in_array($region_name, $disable_regions)) {
          $context_region_list[$theme_name]['disable'][$region_name] = $region_name;
        }
      }
    }

    // Create the context.
    $context = new stdClass();
    $context->disabled = FALSE; /* Edit this to true to make a default context disabled initially */
    $context->api_version = 3;
    $context->name = 'disable_sidebar';
    $context->description = 'Disable sidebar on node level';
    $context->tag = '';
    $context->conditions = array(
      'node' => array(
        'values' => $content_types,
        'options' => array(
          'node_form' => '0',
        ),
      ),
      'flag_node_active' => array(
        'values' => array(
          'disable_sidebar' => 'disable_sidebar',
        ),
        'options' => array(
          'flag_node_active' => 0,
        ),
      ),
    );
    $context->reactions = array(
      'region' => $context_region_list,
    );
    $context->condition_mode = 1;

    if (context_save($context)) {
      drupal_set_message(t('disable_sidebar context added successfully.'));
    } else {
      drupal_set_message(t('disable_sidebar context creation failed!'));
    }
  }
}

/**
 * Implements hook_dennis_datalayer_node_options().
 *
 * Provide single_column token to dennis_datalayer module.
 * Cases 29104, 29034.
 */
function dennis_layout_dennis_datalayer_node_options() {
  $node_options_tokens = array();

  if ($node = menu_get_object()) {
    $node_options_tokens['single_column'] = array(
      'value' => 0,
      'label' => 'single column',
    );
    if (!empty($node->field_sidebar_off) && $node->field_sidebar_off[LANGUAGE_NONE][0]['value'] == 1) {
      $node_options_tokens['single_column']['value'] = 1;
    }
  }
  return $node_options_tokens;
}

/**
 * Implements hook_views_default_views_alter().
 *
 * Add an additional "No right column" filter to the content view.
 */
function dennis_layout_views_default_views_alter(&$views) {
  if (isset($views['content_administration'])) {
    $handler =& $views['content_administration']->display['default']->handler;
    /* Filter criterion: Flags: Flagged */
    $handler->display->display_options['filters']['flagged']['id'] = 'flagged';
    $handler->display->display_options['filters']['flagged']['table'] = 'flagging';
    $handler->display->display_options['filters']['flagged']['field'] = 'flagged';
    $handler->display->display_options['filters']['flagged']['relationship'] = 'flag_content_rel';
    $handler->display->display_options['filters']['flagged']['value'] = 'All';
    $handler->display->display_options['filters']['flagged']['exposed'] = TRUE;
    $handler->display->display_options['filters']['flagged']['expose']['operator_id'] = '';
    $handler->display->display_options['filters']['flagged']['expose']['label'] = 'Sidebar disabled';
    $handler->display->display_options['filters']['flagged']['expose']['operator'] = 'flagged_op';
    $handler->display->display_options['filters']['flagged']['expose']['identifier'] = 'flagged';
    $handler->display->display_options['filters']['flagged']['expose']['remember_roles'] = array(
      2 => '2',
      1 => 0,
      3 => 0,
      5 => 0,
      6 => 0,
      4 => 0,
      7 => 0,
    );

    /* Relationship: Flags: disable_sidebar */
    $handler->display->display_options['relationships']['flag_content_rel']['id'] = 'flag_content_rel';
    $handler->display->display_options['relationships']['flag_content_rel']['table'] = 'node';
    $handler->display->display_options['relationships']['flag_content_rel']['field'] = 'flag_content_rel';
    $handler->display->display_options['relationships']['flag_content_rel']['required'] = 0;
    $handler->display->display_options['relationships']['flag_content_rel']['flag'] = 'disable_sidebar';
    $handler->display->display_options['relationships']['flag_content_rel']['user_scope'] = 'any';
  }
}
